-------------------------------------------------------------------------------------------------------------------------------------
#URL: https://www.darkreading.com/cloud/diy-botnet-detection-techniques-and-challenges/a/d-id/1333949
#URL no.: 1
#Author: Johnathan Azaria
#Threat types: C&C Botnet

#Motivation:
Botnets have been around for over two decades, and with the rise of the Internet of Things (IoT), they have spread further to devices no one imagined they would: routers, mobile devices, and even toasters.
To prevent botnet infections, organizations must be able to detect them. But botnet detection isn't easy. Let's explore some of the top techniques and challenges in botnet detection.

#Methods for Botnet Detection:
So, what's a botnet? Simply put, it's a cluster of bots — compromised computers and devices — that perform commands given by the botnet owner. Usually, the botnet owner will dedicate a command and control server (C2), a compromised server for communicating with the bots, usually via Internet Relay Chat commands. The botnet owner uses the C2 server to order botnets to execute attacks, whether that's DDoS attacks, data theft, identity theft, or another type of attack. Thus, the smoking gun that points to a botnet is its C2 server.

Unfortunately, finding the C2 isn't usually a simple task. Many botnet commands emerge from multiple servers or take hidden forms, masking the malicious commands as harmless activity such as Tor network traffic, social media traffic, traffic between peer-to-peer services, or domain-generation algorithms. Further complicating matters, the commands are often very subtle, making it difficult to detect any anomalies.

One method for attempting to detect C2s is breaking down and analyzing the malware code. Organizations can try to disassemble the compiled code, from which they can sometimes identify the root source of the botnet's commands. However, since botnet creators and administrators increasingly are using integrated encryption, this technique is less and less effective.

Generally, C2 detection requires visibility into the communication between a C2 server and its bots, but only security solutions that specifically protect C2 servers will have this kind of visibility. A more common approach for detecting botnets is tracking and analyzing the attacks themselves — into which standard security solutions provide visibility — and determining which attacks originated from botnets.

When looking at exploit attempts, there are a few possible indications for a botnet. For example, if the same IP addresses attack the same sites, at the same time, using the same payloads and attack patterns, there's a good chance they're part of a botnet. This is especially true if many IPs and sites are involved. One prominent example is a DDoS attempt by a botnet on a web service.

-------------------------------------------------------------------------------------------------------------------------------------
#URL: https://www.distilnetworks.com/glossary/term/botnet-detection/
#URL no.: 2
#Author: Distil Networks (part of Imperva)
#Threat types: C&C Botnet

#Motivation:

#Methods for Botnet Detection:
Basic botnet detection is broken out into two categories: static analysis and behavioral analysis.

Static analysis techniques involve seeking out a particular data point and blocking or blacklisting the source from future requests. For example, uncovering a malware signature or C&C address. The upside is, static techniques can be very quick and effective. However, the downside is that malicious users and botnet managers are increasingly able to obscure themselves and get lost in the crowd. Botnets become harder and harder to pinpoint, verify, and then block. They’re able to use unpredictable means to cloak themselves, such as obscuring their targets through URL obfuscation and rapidly cycling through the IP addresses of their own C&C servers.

On the other hand, behavioral analysis techniques involve a much larger time commitment, but are more essential in today’s botnet detection and mitigation landscape. One behavioral analysis involves keeping an eye on the timing of attacks. For example, a C&C server often sends mass orders for bots designed to take specific actions. All of these endpoint connections swell beyond the normal level, and you may also notice connections having numerical IP addresses rather than server names. There’s also port-scanning, which involves a bot looking on a local network for new and untapped vulnerabilities.


-------------------------------------------------------------------------------------------------------------------------------------
#URL: https://www.imperva.com/blog/the-challenges-of-diy-botnet-detection-and-how-to-overcome-them/
#URL no.: 3
#Author: Johnathan Azaria
#Threat types: C&C Botnet

###Motivation:
Static techniques — basically, looking for a highly specific match to something like a malware signature or specific executable or C&C connection address (see above) — are fast and, when they work, effective.

Unfortunately, they simply don’t always work; botnet managers (“herders”) are getting increasingly sophisticated about evading such simple giveaways, using counters such as file polymorphism to alter the executables in unpredictable ways, URL obfuscation to hide the targets of DDOS attacks, server proxies, and even rapidly changing the IP addresses of their own C&C servers. Botnet detection via Static Analysis alone simply isn’t enough.

That’s why behavioral analysis is virtually always an essential approach to botnet detection as well. For instance, the timing of attacks is often a dead giveaway; a C&C server usually issues blanket orders for bots to take specific actions, generating enormous network activity at one point in time (usually, of the types described above under network-based detection).

The average interval of time between an endpoint connecting to different outbound servers will generally be low for bots simply because there isn’t a human driving that network activity. There will be more failed connection attempts for the same reason and those connection attempts are more likely to involve numerical IP addresses than server names. And, of course, port-scanning the local network for new infiltration opportunities is classic behavior for a bot. All of these behaviors can be detected with SIEM / Network IDS rules to expand an organizations botnet detection capabilities.

###Botnet Symptoms:
There are several symptoms which often manifest shortly after botnet infiltration as the compromised machine begins executing its instructions. Awareness of these symptoms can aid in early botnet detection. They include
	- Linking to established C&C servers for instructions
	- Generating Internet Relay Chat (IRC) traffic via a specific range of ports
	- Generating simultaneous identical domain name system (DNS) requests
	- Generating Simple Mail Transfer Protocol (SMTP) traffic/e-mails
	- Reducing workstation performance/Internet access to the point it’s obvious to end users

###Host/endpoint:
Host-based botnet detection begins with client-side anti-viral solutions, since the infiltration itself nearly always happens via malware. Unfortunately, antiviral technology often simply fails to spot an infection, so administrators should also be on the lookout for additional issues.

Host-based botnet detection include things like rootkit installations, unexpected popups while browsing over HTTP (though this may simply be spyware), or any sudden change to the Windows Hosts file, which can be used (or abused) to restrict outbound server access. Also, of course, if the default DNS servers have been modified, that’s likely a sign that traffic is going places the organization doesn’t want it to go.

###Botnet detection on the network:

Network-based botnet detection is a bit more complex. One approach lies in detecting and monitoring internet relay chat (IRC) traffic, which probably shouldn’t exist on a company network at all. IRC traffic is also sent unencrypted, meaning keywords can be detected with a packet sniffer. The default IRC port is 6667, but the entire port range (from 6660-6669 and 7000) might be utilized by bots.

As suggested earlier, if many endpoints are suddenly and simultaneously hitting one or more external sites, that’s a sign that a botnet-driven DDOS attack is being launched from your network. Similarly, mass outbound traffic happening over SMTP indicates spam-mailing may be an issue. Include rules for these symptoms in your network-based security tools to tune them for botnet detection.

###New botnet techniques:
One slightly newer wrinkle for botnets is a P2P management architecture. This works in a decentralized way, such that there is no central C&C server and commands are issued from peers. Such a botnet is harder to detect, though infected bots will usually act in much the same ways otherwise because the bot herder has the same goals.

-------------------------------------------------------------------------------------------------------------------------------------
#URL: https://www.alienvault.com/blogs/security-essentials/botnet-detection-and-removal-methods-best-practices
#URL no.: 4
#Author: Garrett Gross
#Threat types: C&C Botnet

#Motivation:


-------------------------------------------------------------------------------------------------------------------------------------
#URL: http://www.infosecisland.com/blogview/25191-Answering-Tough-Questions-About-Network-Metadata-and-Zeek.html
#URL no.: 5
#Author: Kevin Sheu
#Threat types: ---

#Key Notes:
NetFlows não têm informação suficiente para analisar tráfego de rede. Guardar todos os PCAPs é demais. Usar metadados formatados pelo Zeek é mais vantajoso devido a diminuir o armazenamento de dados necessário, comparativamente ao PCAP. No entanto, será necessário guardar os PCAPs na mesma, mas poderão ser guardados apenas os pacotes capturados que sejam relevantes para o ataque em questão.

